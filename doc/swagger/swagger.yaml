openapi: 3.0.1
info:
  title: Event Management System API Doc
  version: 1.0.0
  description: API Documentation for Event Managment System placed on NIBM.


servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ChanukaDilshan-8ba/event-management_system_api/1.0.0
  - url: http://localhost:8080/api/v1
    description: Version 1

paths:
  /admin/login:
    post:
      summary: Admin login
      description: This endpoint for allows an admin to log into the system.In here genarated Token from JWT
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for the authenticated admin
                  message:
                    type: string
                    description: Success message
                example:
                  message: "Login successful"
        "400":
          description: Invalid login credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                example:
                  error: "Invalid username or password"
  /lecturer/workshops:
    get:
      summary: View current workshops
      description: Allows a lecturer to view current workshops with optional filters.
      tags:
        - Lecturer
      responses:
        "200":
          description: List of current workshops
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    eid:
                      type: string
                      example: Event-001
                    date:
                      type: string
                      format: date
                      example: 2024-10-02
                    name:
                      type: string
                      example: Devops

                    status:
                      type: string
                      example: upcoming
                    location:
                      type: string
                      example: Hall-02

                    topic:
                      type: string
                      example: OOP Session

                    speaker:
                      type: string
                      example: Chanuka Dilshan
                    duration:
                      type: string
                      example: 6h
                    bid:
                      type: string
                      example: DSE24.1f
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Workshops not found"
  /lecturer/interviews:
    get:
      summary: View current Interviews
      description: Allows a lecturer to view current interviews with optional filters.
      tags:
        - Lecturer
      responses:
        "200":
          description: List of current Interviews
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    eid:
                      type: string
                      example: Event-002
                    interviewer:
                      type: string
                      example: John doe
                    location:
                      type: string
                      example: Library
                    date:
                      type: string
                      format: date
                      example: 2024-10-10
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Interviews not found"
  /admin/student/register:
    post:
      summary: Register a student
      description: This endpoint allows an admin to create a new student account.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"
                username:
                  type: string
                  example: "johndoe123"
                password:
                  type: string
                  format: password
                  example: "StrongP@ssword1"
                profilepic:
                  type: string
                  format: binary
                  description: Profile picture of the student.
                age:
                  type: integer
                  example: 21
                badge:
                  type: object
                  properties:
                    bid:
                      type: string
                      example: "batch-101"
              required:
                - name
                - email
                - username
                - password
                - age
                - batchId
      responses:
        "201":
          description: Student account created successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Student account created successfully!"
                  studentId:
                    type: string
                    example: "student-123"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input. Please check the provided data."
  /lecturer/students/{bid}:
    get:
      summary: View all students in the system for a selected batch
      description: Allows a lecturer to view all registered students in a specific batch.
      tags:
        - Lecturer
      parameters:
        - name: bid
          in: path
          required: true
          description: The ID of the batch to retrieve students for.
          schema:
            type: string
            example: "batch-101"
      responses:
        "200":
          description: List of students in the selected batch
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "student-123"
                    name:
                      type: string
                      example: "John Doe"
                    email:
                      type: string
                      example: "Test@gmail.com"
                    username:
                      type: string
                      example: test
                    profilePic:
                      type: string
                      example: test.jpg
                    age:
                      type: integer
                      example: 21
                    badge:
                      type: object
                      properties:
                        bid:
                          type: string
                          example: "batch-101"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Students Not found"
  /admin/student/{sid}:
    put:
      summary: Update student details
      description: Allows an admin to update a student's details.
      tags:
        - Admin
      parameters:
        - name: sid
          in: path
          description: ID of the student to be updated
          required: true
          schema:
            type: string
            example: "student-123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"
                username:
                  type: string
                  example: "johndoe123"
                password:
                  type: string
                  format: password
                  example: "StrongP@ssword1"
                profilePic:
                  type: string
                  format: binary
                  description: Profile picture of the student.
                age:
                  type: integer
                  example: 21
                badge:
                  type: object
                  properties:
                    bid:
                      type: string
                      example: "batch-101"
              required:
                - name
                - email
                - username
                - password
                - age
                - badge
      responses:
        "200":
          description: Student updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Student updated successfully"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input provided"
  /admin/batches:
    post:
      summary: Create a batch
      description: Allows an admin to create a new batch for a course.
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bid:
                  type: string
                name:
                  type: string
                  example: "Gadse241f"
                  description: Name of the batch.
                course:
                  type: string
                  example: "Software Engineering"
                  description: Course associated with the batch.
                status:
                  type: string
                  enum:
                    - active
                    - inactive
                  example: "active"
                  description: Status of the batch (e.g., active or inactive).
                date:
                  type: string
                  format: date
                  example: "2024-06-30"
                  description: start date of the batch.
                endDate:
                  type: string
                  format: date
                  example: "2025-06-30"
                  description: End date of the batch.
                lecturer:
                  type: object
                  properties:
                    lid:
                      type: string
                      example: "lecturer-123"
                      description: ID of the lecturer assigned to the batch.

              required:
                - batchName
                - course
                - status
                - date
                - endDate
                - lecture
      responses:
        "201":
          description: Batch created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Batch created successfully."
                  batchId:
                    type: string
                    example: "batch-456"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input. Please check the provided data."
  /admin/lecturer/register:
    post:
      summary: Add a lecturer
      description: Allows an admin to add a new lecturer.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                contact:
                  type: string
              required:
                - name
                - email
                - username
                - password
                - contact
      responses:
        "201":
          description: Lecturer account created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Lecturer account created successfully!"
                  studentId:
                    type: string
                    example: "lecturer-123"
        "400":
          description: Invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input. Please check the provided data."
  /admin/lecturer/{lid}:
    put:
      summary: Update lecturer details
      description: Allows an admin to update the details of a lecturer.
      tags:
        - Admin
      parameters:
        - name: lid
          in: path
          required: true
          schema:
            type: string
          description: ID of the lecturer to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - username
                - password
                - contact
              properties:
                username:
                  type: string
                  example: "John Doe"
                name:
                  type: string
                  format: email
                  example: "john.doe@example.com"
                email:
                  type: string
                  example: "johndoe"
                password:
                  type: string
                  format: password
                  example: "StrongP@ssword123"
                contact:
                  type: string
      responses:
        "200":
          description: Lecturer details updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Lecturer details updated successfully."
                  lecturerId:
                    type: string
                    example: "lecturer-789"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input. Please check the provided data."
  /admin/events:
    get:
      summary: View complete or upcoming events
      description: Allows an admin to view all events, filtered by their status (e.g., past or upcoming).
      tags:
        - Admin
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [completed, upcoming]
          description: Filter events by their status (completed for past events, upcoming for future events).
      responses:
        "200":
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    eid:
                      type: string
                    date:
                      type: string
                      format: date
                    name:
                      type: string
                      format: date
                    status:
                      type: string
                    lid:
                      type: string
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Not found"
  /lecturer/login:
    post:
      summary: lecturer login
      description: Allows a lecturer to log into the system.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for the authenticated admin
                  message:
                    type: string
                    description: Success message
                example:
                  message: "Login successful"
        "400":
          description: Invalid login credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                example:
                  error: "Invalid username or password"
  /lecturer/events/create/interview:
    post:
      summary: Create an interview event
      description: Allows a lecturer to create a new interview event.
      tags:
        - Lecturer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date

                name:
                  type: string

                status:
                  type: string
                interviewer:
                  type: string
                location:
                  type: string
              required:
                - eventName
                - date
                - status
                - location
                - interviewer
      responses:
        "201":
          description: Interview event created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Interview event created successfully"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input provided"
  /lecturer/events/create/workshop:
    post:
      summary: Create a workshop event
      description: Allows a lecturer to create a new workshop event.
      tags:
        - Lecturer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  example: "2024-12-15"
                name:
                  type: string
                  example: "AI and Machine Learning Workshop"

                status:
                  type: string
                location:
                  type: string
                  example: "Auditorium 3, Tech Campus"
                topic:
                  type: array
                  items:
                    type: string
                  example: [ "Artificial Intelligence", "Deep Learning Basics" ]
                speaker:
                  type: string
                  example: "Dr. Jane Smith"
                duration:
                  type: string
                  example: "02:30"
                bid:
                  type: string
                  example: "GAHDSE242f"
              required:
                - eventName
                - date
                - location
                - topic
                - speaker
                - duration
      responses:
        "201":
          description: Workshop event created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Workshop event created successfully."
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input. Please check the provided data."
  /lecturer/announcements:
    post:
      summary: Make announcement
      description: Allows a lecturer to make an announcement for batches.
      tags:
        - Lecturer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  example: "2024-12-15"

                name:
                  type: string
                  example: "AI and Machine Learning Workshop"

                status:
                  type: string

                description:
                  type: string

                bid:
                  type: string

              required:
                - eventName
                - date
                - status
                - batchId
                - description
      responses:
        "201":
          description: Interview event created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Announcement created successfully"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input provided"
  /students/profile:
    put:
      summary: Update student profile
      description: Allows a student to update their personal profile information.
      tags:
        - Student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                  description: Full name of the student.
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"
                  description: Email address of the student.
                username:
                  type: string
                  example: "johndoe123"
                  description: Username for the student's account.
                password:
                  type: string
                  format: password
                  example: "StrongP@ssword1"
                  description: Password for the student's account.
                profilePic:
                  type: string
                age:
                  type: integer
                  example: 21
                  description: Age of the student.
                badge:
                  type: object
                  properties:
                    bid:
                      type: string
                      example: "batch-101"
              required:
                - name
                - email
                - username
                - password
                - age
                - batchId
      responses:
        "200":
          description: Student profile updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Student profile updated successfully."
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input. Please check the provided data."
  /students/portfolio:
    put:
      summary: Maintain career portfolio
      description: Allows a student to maintain their career portfolio.
      tags:
        - Student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                education:
                  type: string
                achievement:
                  type: string
                githubUsername:
                  type: string
              required:
                - description
                - education
                - achievement
      responses:
        "200":
          description: Career portfolio updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Career portfolio updated successfully"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input provided"
  /students/interviews:
    get:
      summary: View assigned Interviews
      description: Allows a student to view all assigned Interviews.
      tags:
        - Student
      responses:
        "200":
          description: List of interviews
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    eid:
                      type: string
                    name:
                      type: string
                    interviewer:
                      type: string
                    location:
                      type: string
                    date:
                      type: string
                      format: date

        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Inteviews not found"
  /student/workshops:
    get:
      summary: View assigned workshops
      description: Allows a student to view all assigned workshops.
      tags:
        - Student
      responses:
        "200":
          description: List of workshops
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    eid:
                      type: string
                    date:
                      type: string
                      format: date
                      example: "2024-12-15"
                    name:
                      type: string
                      example: "AI and Machine Learning Workshop"

                    status:
                      type: string
                    location:
                      type: string
                      example: "Auditorium 3, Tech Campus"
                    topic:
                      type: array
                      items:
                        type: string
                      example: [ "Artificial Intelligence", "Deep Learning Basics" ]
                    speaker:
                      type: string
                      example: "Dr. Jane Smith"
                    duration:
                      type: string
                      example: "02:30"
                    bid:
                      type: string
                      example: "GAHDSE242F"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Workshops not found"
  /student/send:
    post:
      summary: Submit feedback for a lecturer
      description: Allows a student to submit feedback for a specific lecturer.
      tags:
        - Student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eid:
                  type: string
                description:
                  type: string
                  description: Feedback msg

      responses:
        "200":
          description: Feedback submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Feedback submitted successfully."
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input provided"
  /admin/state:
    get:
      summary: View overall state of application
      description: Allows an admin to view the overall state of the application.
      tags:
        - Admin
      responses:
        "200":
          description: Application state details
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalAdmins:
                    type: integer
                  totalLecturers:
                    type: integer
                  totalStudents:
                    type: integer
                  totalEvents:
                    type: integer
                  totalWorkshops:
                    type: integer
                  totalAnnouncements:
                    type: integer
                  totalInterviews:
                    type: integer
                  totalFeedback:
                    type: integer
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "details not found"
  /student/received:
    get:
      summary: View feedback received from lecturer
      description: Allows a student to view feedback received from lecturer for events.
      tags:
        - Student
      responses:
        "200":
          description: List of feedback
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    fid:
                      type: string
                    sender:
                      type: string
                    receiver:
                      type: string
                    description:
                      type: string
                    eid:
                      type: string
                    sid:
                      type: string
                    lid:
                      type: string
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Feedbacks not found"
  /students/announcements:
    get:
      summary: students View announcements
      description: Allows a student to view announcements made by lecturer for batches.
      tags:
        - Student
      responses:
        "200":
          description: List of announcements
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    eid:
                      type: string
                    description:
                      type: string
                    bid:
                      type: string
                    date:
                      type: string
                      format: date
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Announcements not found"
  /lecturer/assign/interviews:
    post:
      summary: Assign interviews for individuals
      description: Allows a lecturer to assign interviews to a set of students.
      tags:
        - Lecturer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                students:
                  type: array
                  items:
                    type: object
                    properties:
                      eid:
                        type: string
                      studentIds:
                        type: array
                        items:
                          type: string
                          example: "S001"
                    required:
                      - studentsIds
                      - eid
      responses:
        "200":
          description: Interviews assigned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Interviews assigned successfully."
                  assignedInterviews:
                    type: array
                    items:
                      type: object
                      properties:
                        studentId:
                          type: string
                          example: "student-101"
                        interviewDetails:
                          type: string
                          example: "Scheduled on 2024-12-25 at 10:00 AM in Room 302"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input provided"
                  details:
                    type: array
                    items:
                      type: string
                    example:
                      - "Student ID is required for all students"
                      - "Interview details must not be empty"
  /student/login:
    post:
      summary: Student login
      description: Allows a student to log into the system.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  message:
                    type: string
                    description: Success message
                example:
                  message: "Login successful"
        "400":
          description: Invalid login credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                example:
                  error: "Invalid username or password"
  /lecturer/send:
    post:
      summary: Submit feedback for an event
      description: Allows a lecturer to submit feedback for a specific student in an event.
      tags:
        - Lecturer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                eid:
                  type: string
                sid:
                  type: string
              required:
                - description
                - eid
                - sid
      responses:
        "200":
          description: Send feedback
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                example:
                  message: "Feedback send Successfully"
        "400":
          description: Feedback send failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                example:
                  error: "Feedback send failed!"
  /lecturer/events/{eid}/status:
    put:
      summary: Update event status
      description: Allows a lecturer to update the status of an event (e.g., upcoming, completed).
      tags:
        - Lecturer
      parameters:
        - name: eid
          in: path
          required: true
          schema:
            type: string
          description: ID of the event to update
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum:
              - upcoming
              - completed
          description: The new status of the event
      responses:
        "200":
          description: Event status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Event status updated successfully."
        "400":
          description: Invalid status value
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid status value"
  /event/delete/{eid}:
    delete:
      summary: Cancel an event
      description: Allows a lecturer to cancel an event.
      tags:
        - Lecturer
      parameters:
        - name: eid
          in: path
          required: true
          schema:
            type: string
          description: ID of the event to cancel
      responses:
        "204":
          description: Event cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Event cancelled successfully."
        "404":
          description: Event not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Event not found."
  /admin/student/remove/{sid}:
    delete:
      summary: Remove a student
      description: Allows a admin to remove a student.
      tags:
        - Admin
      parameters:
        - name: sid
          in: path
          required: true
          schema:
            type: string
          description: ID of the student to remove
      responses:
        "204":
          description: Student removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Student removed successfully."
        "404":
          description: Student not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Student not found."
  /admin/lecturer/remove/{lid}:
    delete:
      summary: Remove a lecturer
      description: Allows a admin to remove a lecturer.
      tags:
        - Admin
      parameters:
        - name: lid
          in: path
          required: true
          schema:
            type: string
          description: ID of the lecturer to remove
      responses:
        "204":
          description: Lecturer removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Lecturer removed successfully."
        "404":
          description: Lecturer not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Lecturer not found."
  /lecturer/received:
    get:
      summary: View feedback from students for an event
      description: Allows a lecturer to view feedback submitted by students for a specific event.
      tags:
        - Lecturer
      responses:
        "200":
          description: List of feedback from students
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    fid:
                      type: string
                      description: ID of  feedback
                    sender:
                      type: string
                    receiver:
                      type: string
                    description:
                      type: string
                    eid:
                      type: string
                    sid:
                      type: string
                    lid:
                      type: string
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Feedbacks not found"
  /logout:
    post:
      summary: Logout
      description: Logs out the user and invalidates the current JWT token.
      tags:
        - Auth
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logout successful. ."
        "401":
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid token or token expired."
  /lecturer/badges:
    get:
      summary: Get all active badges for a specific lecturer
      description: Retrieves a list of all active badges assigned to a specific lecturer.
      tags:
        - Lecturer
      responses:
        "200":
          description: A list of active badges for the lecturer
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    bid:
                      type: string
                      example: "badge-123"
                    name:
                      type: string
                      example: "HDSE242f"
                    course:
                      type: string
                      example: "Higher Diploma in SE"
                    status:
                      type: string
                      example: "Active"
                    date:
                      type: string
                      format: date
                      example: "2025-01-03"
                    endDate:
                      type: string
                      format: date
                      example: "2025-01-30"
                    ledid:
                      type: string
                      example: "L009"

        "404":
          description: No active badges found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No active badges available."
  /get/announcements:
    get:
      summary: Get announcements
      description: Get send announcements for spesific lecturer.
      tags:
        - Lecturer
      responses:
        "200":
          description: Successful retrieval of announcements
          content:
            application/json:
              schema:
                type: object
                properties:
                  eid:
                    type: string
                    description: Event ID
                    example: "E021"
                  description:
                    type: string
                    description: Description of the announcement
                    example: "hcghcb"
                  bid:
                    type: string
                    description: Batch ID associated with the event
                    example: "GADSE232F"
        "404":
          description: Announcements not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No announcements found."
  /admin/batches/all:
    get:
      summary: Get all badges
      description: Retrieves a list of all badges with their details, including batch, course, and lecturer information.
      tags:
        - Admin
      responses:
        "200":
          description: Successful retrieval of all badges
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    bid:
                      type: string
                      description: Badge ID
                      example: "GADSE232F"
                    name:
                      type: string
                      description: Name of the badge
                      example: "Diploma SE Badge"
                    course:
                      type: string
                      description: Course associated with the badge
                      example: "SE Computing"
                    status:
                      type: string
                      description: Current status of the badge
                      example: "Active"
                    date:
                      type: string
                      format: date
                      description: Start date of the badge
                      example: "2024-12-22"
                    endDate:
                      type: string
                      format: date
                      description: End date of the badge
                      example: "2025-12-22"
                    lecid:
                      type: string
                      description: Lecturer ID associated with the badge
                      example: "L007"
        "404":
          description: No badges found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /admin/batches/{bid}:
    put:
      summary: Update badge status
      description: Updates the status of a specific badge identified by its badge ID (`bid`).
      tags:
        - Admin
      parameters:
        - name: bid
          in: path
          required: true
          schema:
            type: string
          description: Badge ID to be updated
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum:
              - active
              - inactive
            description: New status for the badge
      responses:
        "200":
          description: Badge status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Badge status updated successfully."
        "400":
          description: Invalid status value
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid status value."
        "404":
          description: Badge not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Badge not found."
  /students/portfolio/{studentId}:
    get:
      summary: Get student portfolio
      description: Retrieves the portfolio details for a specific student based on their `studentId`.
      tags:
        - Lecturer
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the student whose portfolio is being requested
      responses:
        "200":
          description: Successful retrieval of the student's portfolio
          content:
            application/json:
              schema:
                type: object
                properties:
                  studentId:
                    type: string
                    example: "S010"
                  studentEmail:
                    type: string
                    format: email
                    example: "email@email.com"
                  studentAge:
                    type: integer
                    example: 20
                  portfolioId:
                    type: string
                    example: "C007"
                  portfolioGithubUsername:
                    type: string
                    example: "test"
                  portfolioAchievements:
                    type: string
                    example: "NONE"
                  studentName:
                    type: string
                    example: "test"
                  studentUsername:
                    type: string
                    example: "test"
                  portfolioDescription:
                    type: string
                    example: "test"
                  studentProfilePic:
                    type: string
                    nullable: true
                    example: "null"
                  portfolioEducation:
                    type: string
                    example: "NIBM DIPLOMA"
        "404":
          description: Student portfolio not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Student portfolio not found."
  /event/all:
    get:
      summary: Get all events
      description: Retrieves a list of all events assigned to lecturers.
      tags:
        - Lecturer
      responses:
        "200":
          description: Successful retrieval of all events
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    eid:
                      type: string
                      example: "E013"
                    date:
                      type: string
                      format: date
                      example: "2024-12-30"
                    name:
                      type: string
                      example: "Test"
                    status:
                      type: string
                      example: "upcoming"
                    lid:
                      type: string
                      example: "L009"
        "404":
          description: No events found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No events found."
  /interview/{eventId}/students:
    get:
      summary: Get students for an interview event
      description: Retrieves a list of students scheduled for interviews for a specific event.
      tags:
        - Lecturer
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the event to retrieve students for
      responses:
        "200":
          description: Successful retrieval of students for the specified event
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "S010"
                    name:
                      type: string
                      example: "Test"
                    email:
                      type: string
                      format: email
                      example: "test@email.com"
        "404":
          description: No students found for the given event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No students found for this event."
  /admin/lecturer/all:
    get:
      summary: Get all lecturers
      description: Retrieves a list of all lecturers in the system.
      tags:
        - Admin
      responses:
        "200":
          description: Successful retrieval of all lecturers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    lid:
                      type: string
                      example: "L001"
                    username:
                      type: string
                      example: "Lecturer1"
                    name:
                      type: string
                      example: "John Doe"
                    email:
                      type: string
                      format: email
                      example: "john@gmail.com"
                    contact:
                      type: string
                      example: "1234567890"
        "404":
          description: No lecturers found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No lecturers found."
  /session/details:
    get:
      summary: Get session details
      description: Retrieves the details of the current session, including the session ID, token, and user role.
      tags:
        - Auth
      responses:
        "200":
          description: Successful retrieval of session details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "001"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMDEiLCJpYXQiOjE3MzU4MDU3MzAsImV4cCI6MTczNTgwOTMzMH0.i5BfMmSsyQhi9lWsOYxNkcj9ieKyumwVZ_0oORjyFnA"
                  role:
                    type: string
                    example: "ROLE_ADMIN"
  /admin/students:
    get:
      summary: Get all students
      description: Retrieves a list of all students in the system.
      tags:
        - Admin
      responses:
        "200":
          description: Successful retrieval of all students
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sid:
                      type: string
                      example: "S002"
                    name:
                      type: string
                      example: "Shashimal"
                    email:
                      type: string
                      format: email
                      example: "Shashimal.doe@example.com"
                    username:
                      type: string
                      example: "Shashimal"
                    profilePic:
                      type: string
                      example: "profile-pic-url"
                    age:
                      type: integer
                      example: 25
                    badge:
                      type: object
                      properties:
                        bid:
                          type: string
                          example: "GADSE232F"
                        name:
                          type: string
                          example: "Diploma SE Badge"
        "404":
          description: No students found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No students found."
  /workshop/{eventId}/students:
    get:
      summary: Get all students for a specific workshop
      description: Retrieves a list of all students enrolled in a specific workshop identified by the eventId.
      tags:
        - Lecturer
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the workshop/event for which students are being retrieved
      responses:
        "200":
          description: Successful retrieval of students for the specified workshop
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sid:
                      type: string
                      example: "S001"
                    name:
                      type: string
                      example: "Johndoenew"
                    email:
                      type: string
                      format: email
                      example: "john@gmail.com"
                    username:
                      type: string
                      example: "JohnNEW"
                    profilePic:
                      type: string
                      example: "null"
                    age:
                      type: integer
                      example: 22
                    badge:
                      type: object
                      properties:
                        bid:
                          type: string
                          example: "B003"
                        name:
                          type: string
                          example: "Test1Badge"
        "404":
          description: No students found for the specified workshop
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No students found for the workshop."




components:
  schemas:
    Admin:
      type: object
      properties:
        AID:
          type: string
        Name:
          type: string
        Username:
          type: string
        Password:
          type: string
          format: password
      required:
        - AID
        - Name
        - Username
        - Password

    Lecturer:
      type: object
      properties:
        LID:
          type: string
        Username:
          type: string
        Name:
          type: string
        Email:
          type: string
          format: email
        Password:
          type: string
          format: password
        Contact:
          type: string
      required:
        - LID
        - Username
        - Name
        - Email
        - Password
        - Contact

    Student:
      type: object
      properties:
        SID:
          type: string
        Name:
          type: string
        Email:
          type: string
          format: email
        Username:
          type: string
        Password:
          type: string
          format: password
        ProfilePic:
          type: string
        Age:
          type: integer
        BID:
          type: string
        LID:
          type: string
      required:
        - SID
        - Name
        - Email
        - Username
        - Password
        - BID
        - LID

    Badge:
      type: object
      properties:
        BID:
          type: string
        Name:
          type: string
        Course:
          type: string
        Status:
          type: string
        Date:
          type: string
          format: date
        EndDate:
          type: string
          format: date
        LID:
          type: string
      required:
        - BID
        - Name
        - Course
        - Status
        - Date
        - LID

    Event:
      type: object
      properties:
        EID:
          type: string
        Date:
          type: string
          format: date
        Name:
          type: string
        Status:
          type: string
        LID:
          type: string
      required:
        - EID
        - Date
        - Name
        - Status
        - LID

    Workshop:
      type: object
      properties:
        EID:
          type: string
        Location:
          type: string
        Topic:
          type: string
        Speaker:
          type: string
        Duration:
          type: string
        BID:
          type: string
      required:
        - EID
        - Location
        - Topic
        - Speaker
        - Duration
        - BID

    Announcement:
      type: object
      properties:
        EID:
          type: string
        Description:
          type: string
        BID:
          type: string
      required:
        - EID
        - Description
        - BID

    Interview:
      type: object
      properties:
        EID:
          type: string
        Interviewer:
          type: string
        Location:
          type: string
      required:
        - EID
        - Interviewer
        - Location

    Feedback:
      type: object
      properties:
        FID:
          type: string
        Sender:
          type: string
        Receiver:
          type: string
        Description:
          type: string
        EID:
          type: string
        SID:
          type: string
        LID:
          type: string
      required:
        - FID
        - Sender
        - Receiver
        - Description
        - EID
        - SID
        - LID

    Student_Interview:
      type: object
      properties:
        EID:
          type: string
        SID:
          type: string
      required:
        - EID
        - SID

    CareerPortfolio:
      type: object
      properties:
        CID:
          type: string
        Description:
          type: string
        Education:
          type: string
        Achievements:
          type: string
        SID:
          type: string
      required:
        - CID
        - Description
        - Education
        - Achievements
        - SID